var search_data = {"index":{"searchIndex":["arbacverifier","object","apply_role_assignment()","apply_role_revocation()","backward_slicing()","compute_reachability()","forward_slicing()","parse_arbac_file()"],"longSearchIndex":["arbacverifier","object","arbacverifier#apply_role_assignment()","arbacverifier#apply_role_revocation()","arbacverifier#backward_slicing()","arbacverifier#compute_reachability()","arbacverifier#forward_slicing()","arbacverifier#parse_arbac_file()"],"info":[["ArbacVerifier","","ArbacVerifier.html","","<p>Collection of utilities to manipulate .arbac files (defining an ARBAC role reachability problem) to parse …\n"],["Object","","Object.html","",""],["apply_role_assignment","ArbacVerifier","ArbacVerifier.html#method-i-apply_role_assignment","(state, target, assignment_rule)","<p>Given a current state, a target user and an assignment rule, computes the rule application result state …\n"],["apply_role_revocation","ArbacVerifier","ArbacVerifier.html#method-i-apply_role_revocation","(state, target, revocation_rule)","<p>Given a current state, a target user and an revocation rule, computes the rule application result state …\n"],["backward_slicing","ArbacVerifier","ArbacVerifier.html#method-i-backward_slicing","(original_policy)","<p>Compute the backward slicing algorithm within a given policy in order to make the latter smaller and …\n"],["compute_reachability","ArbacVerifier","ArbacVerifier.html#method-i-compute_reachability","(policy)","<p>Computes the solution of the role reachability problem for the given policy and target\n<p>policy &mdash; The hash …\n\n"],["forward_slicing","ArbacVerifier","ArbacVerifier.html#method-i-forward_slicing","(original_policy)","<p>Compute the forward slicing algorithm within a given policy in order to make the latter smaller and easier …\n"],["parse_arbac_file","ArbacVerifier","ArbacVerifier.html#method-i-parse_arbac_file","(path)","<p>Parse a given and properly formatted arbac file into an easily usable hash\n<p>path &mdash; The absolute path of the …\n\n"]]}}