var search_data = {"index":{"searchIndex":["arbacinstance","arbacmodule","backward_slicing()","compute_reachability()","forward_slicing()","new()","parse_arbac_file()"],"longSearchIndex":["arbacinstance","arbacmodule","arbacmodule#backward_slicing()","arbacinstance#compute_reachability()","arbacmodule#forward_slicing()","arbacinstance::new()","arbacmodule#parse_arbac_file()"],"info":[["ArbacInstance","","ArbacInstance.html","","<p>Representation of an ARBAC role reachability problem\n"],["ArbacModule","","ArbacModule.html","","<p>Collection of utilities to manipulate .arbac files (defining an ARBAC role reachability problem) to parse …\n"],["backward_slicing","ArbacModule","ArbacModule.html#method-i-backward_slicing","(original_policy)","<p>Compute the backward slicing algorithm within a given policy in order to make the latter smaller and …\n"],["compute_reachability","ArbacInstance","ArbacInstance.html#method-i-compute_reachability","()","<p>Computes the solution of the role reachability problem for the active instance\n<p>Returns\n<p>Returns true if …\n"],["forward_slicing","ArbacModule","ArbacModule.html#method-i-forward_slicing","(original_policy)","<p>Compute the forward slicing algorithm within a given policy in order to make the latter smaller and easier …\n"],["new","ArbacInstance","ArbacInstance.html#method-c-new","(path)","<p>Initializes @instance with the parsed hash value of the role reachability problem\n<p>path &mdash; the String representation …\n\n"],["parse_arbac_file","ArbacModule","ArbacModule.html#method-i-parse_arbac_file","(path)","<p>Parse a given and properly formatted arbac file into an easily usable hash\n<p>path &mdash; The absolute path of the …\n\n"]]}}